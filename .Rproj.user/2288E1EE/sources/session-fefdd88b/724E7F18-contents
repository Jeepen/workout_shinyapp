# app.R

# Load necessary packages
library(shiny)
library(shinyWidgets)
library(DBI)
library(RSQLite)
library(bcrypt)

# Source helper scripts for UI, server functions, and data helpers
source("R/server_functions.R")
source("R/ui_elements.R")
source("R/data_helpers.R")

# Initialize database tables if they do not exist
initialize_db()  # Call initialize_db without any arguments

# Define the UI
ui <- fluidPage(
  titlePanel("Workout Tracker"),
  uiOutput("page")  # Dynamically loads either login, register, or dashboard based on user state
)

# Define the server function
server <- function(input, output, session) {
  # Track user login state
  user <- reactiveVal(NULL)
  
  # Render the correct page based on login state
  output$page <- renderUI({
    if (is.null(user())) {
      # Show login or register UI if not logged in
      login_ui("login_ui")
    } else {
      # Show dashboard UI if logged in
      dashboard_ui("dashboard_ui")
    }
  })
  
  # Handle login and registration within server_functions.R
  handle_user_interactions(input, output, session)
}

# Run the Shiny app
shinyApp(ui = ui, server = server)
